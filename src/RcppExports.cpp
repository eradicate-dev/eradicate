// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_lik_trans
SEXP get_lik_trans(SEXP I_, SEXP I1_);
RcppExport SEXP _eradicate_get_lik_trans(SEXP I_SEXP, SEXP I1_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type I_(I_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type I1_(I1_SEXP);
    rcpp_result_gen = Rcpp::wrap(get_lik_trans(I_, I1_));
    return rcpp_result_gen;
END_RCPP
}
// nll_multmixOpen
SEXP nll_multmixOpen(SEXP y_, SEXP yt_, SEXP Xlam_, SEXP Xgam_, SEXP Xom_, SEXP Xp_, SEXP Xiota_, SEXP beta_, SEXP beta_ind_, SEXP Xlam_offset_, SEXP Xgam_offset_, SEXP Xom_offset_, SEXP Xp_offset_, SEXP Xiota_offset_, SEXP ytna_, SEXP yna_, SEXP lk_, SEXP mixture_, SEXP first_, SEXP last_, SEXP first1_, SEXP M_, SEXP T_, SEXP J_, SEXP delta_, SEXP dynamics_, SEXP fix_, SEXP go_dims_, SEXP immigration_, SEXP I_, SEXP I1_, SEXP Ib_, SEXP Ip_, SEXP pi_fun_, SEXP lfac_k_, SEXP kmyt_, SEXP lfac_kmyt_, SEXP fin_);
RcppExport SEXP _eradicate_nll_multmixOpen(SEXP y_SEXP, SEXP yt_SEXP, SEXP Xlam_SEXP, SEXP Xgam_SEXP, SEXP Xom_SEXP, SEXP Xp_SEXP, SEXP Xiota_SEXP, SEXP beta_SEXP, SEXP beta_ind_SEXP, SEXP Xlam_offset_SEXP, SEXP Xgam_offset_SEXP, SEXP Xom_offset_SEXP, SEXP Xp_offset_SEXP, SEXP Xiota_offset_SEXP, SEXP ytna_SEXP, SEXP yna_SEXP, SEXP lk_SEXP, SEXP mixture_SEXP, SEXP first_SEXP, SEXP last_SEXP, SEXP first1_SEXP, SEXP M_SEXP, SEXP T_SEXP, SEXP J_SEXP, SEXP delta_SEXP, SEXP dynamics_SEXP, SEXP fix_SEXP, SEXP go_dims_SEXP, SEXP immigration_SEXP, SEXP I_SEXP, SEXP I1_SEXP, SEXP Ib_SEXP, SEXP Ip_SEXP, SEXP pi_fun_SEXP, SEXP lfac_k_SEXP, SEXP kmyt_SEXP, SEXP lfac_kmyt_SEXP, SEXP fin_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type yt_(yt_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xlam_(Xlam_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xgam_(Xgam_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xom_(Xom_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xp_(Xp_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xiota_(Xiota_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type beta_(beta_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type beta_ind_(beta_ind_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xlam_offset_(Xlam_offset_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xgam_offset_(Xgam_offset_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xom_offset_(Xom_offset_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xp_offset_(Xp_offset_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xiota_offset_(Xiota_offset_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type ytna_(ytna_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type yna_(yna_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type lk_(lk_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type mixture_(mixture_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type first_(first_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type last_(last_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type first1_(first1_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type M_(M_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type T_(T_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type J_(J_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type delta_(delta_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type dynamics_(dynamics_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type fix_(fix_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type go_dims_(go_dims_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type immigration_(immigration_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type I_(I_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type I1_(I1_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Ib_(Ib_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Ip_(Ip_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type pi_fun_(pi_fun_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type lfac_k_(lfac_k_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type kmyt_(kmyt_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type lfac_kmyt_(lfac_kmyt_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type fin_(fin_SEXP);
    rcpp_result_gen = Rcpp::wrap(nll_multmixOpen(y_, yt_, Xlam_, Xgam_, Xom_, Xp_, Xiota_, beta_, beta_ind_, Xlam_offset_, Xgam_offset_, Xom_offset_, Xp_offset_, Xiota_offset_, ytna_, yna_, lk_, mixture_, first_, last_, first1_, M_, T_, J_, delta_, dynamics_, fix_, go_dims_, immigration_, I_, I1_, Ib_, Ip_, pi_fun_, lfac_k_, kmyt_, lfac_kmyt_, fin_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_eradicate_get_lik_trans", (DL_FUNC) &_eradicate_get_lik_trans, 2},
    {"_eradicate_nll_multmixOpen", (DL_FUNC) &_eradicate_nll_multmixOpen, 38},
    {NULL, NULL, 0}
};

RcppExport void R_init_eradicate(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
